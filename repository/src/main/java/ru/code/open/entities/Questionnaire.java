package ru.code.open.entities;

import lombok.Data;
import lombok.NoArgsConstructor;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Embedded;
import javax.persistence.Entity;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import java.util.Set;

import static javax.persistence.EnumType.STRING;

/**
 * The class {@code Questionnaire} is an entity for the ORM to a database. This entity represents a medical calculator
 * questionnaire data (i.e. without scoring algorithms).
 */
@Data
@NoArgsConstructor
@Entity
@Table(name = "questionnaire")
public class Questionnaire {

    /**
     * The unique identifier of this entity. The value for this field is generated by database's sequence.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE)
    @Column(name = "id", unique = true, nullable = false, insertable = false, updatable = false)
    private long id;

    /**
     * The questionnaire title.
     */
    @Column(name = "title", unique = true, nullable = false)
    private String title;

    /**
     * The start startState of this questionnaire.
     */
    @Embedded
    private State startState;

    /**
     * The predefined possible values of the patient conditions for a scoring patient's questionnaire survey.
     */
    @OneToMany(cascade = {CascadeType.PERSIST, CascadeType.REFRESH}, fetch = FetchType.EAGER)
    private Set<PatientCondition> patientConditions;

    /**
     * The medical calculator questionnaire type.
     */
    @Column(name = "medical_questionnaire_type", nullable = false)
    @Enumerated(STRING)
    private MedicalQuestionnaireType medicalQuestionnaireType;

    /**
     * Initializes a newly created {@code Questionnaire} object, with the initialization of the fields with the given
     * values.
     *
     * @param title                     {@link #title}
     * @param startState                {@link #startState}
     * @param patientConditions         {@link #patientConditions}
     * @param medicalQuestionnaireType  {@link #medicalQuestionnaireType}
     */
    public Questionnaire(String title, State startState, Set<PatientCondition> patientConditions,
                         MedicalQuestionnaireType medicalQuestionnaireType) {
        this.title = title;
        this.startState = startState;
        this.patientConditions = patientConditions;
        this.medicalQuestionnaireType = medicalQuestionnaireType;
    }
}